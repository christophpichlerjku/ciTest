name: Run Benchmarks

# Trigger the workflow on any push or pull_request to any branch
on:
  push:
    branches:
      - '**'  # Matches all branches 'challenge*'
  pull_request:
    branches:
      - '**'  # Matches all branches

jobs:
  run_benchmarks:
    runs-on: ubuntu-latest  # Specify the environment (Linux)

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK and Maven
      - name: Set up JDK and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'  # Ensure JDK matches
          mvn-version: '3.8.1'  # Specify the Maven version, if using Maven

      # Step 3: Install project dependencies (if using Maven)
      - name: Install dependencies (Maven)
        run: mvn install --no-transfer-progress

      # Step 4: Run the benchmarks
      - name: Run benchmarks
        run: mvn exec:java -Dexec.mainClass="at.jku.ssw.ciTest.SortingBenchmark"  # Change to your benchmark's entry point
        
      # Step 5: Store the benchmarks  
      - name: Commit and push benchmark results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication
        run: |
        # Add, commit and push the benchmark results back to the repository
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        # Add the generated JSON result file
        git add jmh-result.json
        
        # Commit the changes
        git commit -m "Add benchmark results"
        
        # Push to the same branch
        git push origin HEAD:${{ github.ref }}